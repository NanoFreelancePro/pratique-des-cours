/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
    margin-block: 0;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* FONTS */
@import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

/* Variables */
$color-bg: #0A2239;
$color-project: #A5C4D4;
$color-content: #8499B1;
$color-link: black;
$breakpoints : (
    mobile: 599px);

/* Mixin */
@mixin color-contents ($color){
    @if ($color==$color-bg) {
        $color: complement($color-bg);
    }
    background: $color;
}

@mixin content__title--style {
    font-size: 1.2em;
    font-weight: bold;
    text-align: center;
}
@mixin content__name--style {
    margin-bottom: 3px;
    font-size: 1em;
    text-align: center;
}
@mixin content__text--style{
    margin: 5px 8px 10px;
    font-size: .8em;
    font-style: italic;
}
@mixin border-shadow-bloc ($color : $color-bg){
    @if (lightness($color)<25%) {
        $color: lighten($color,10%);
    }@else{
        $color: darken($color,10%);
    }
    box-shadow: 2px 2px 11px 0px ($color);
}
@mixin border-shadow-content ($color : $color-bg){
    box-shadow: 2px 2px 11px 0px $color;
}

@mixin mobile-only {
    @media screen and (max-width: map-get($breakpoints, mobile)) {
        @content;
    }
}

/* CONTENT */
body{
    font-family: "roboto 300";
    background: $color-bg;
}

a{
    text-decoration: none; 
}

a:link{
    text-decoration: none;
    color: $color-link;
}
/* a:hover{
    ;
} */
a:visited{
    color: $color-link;
}
/* a:active{

} */

.project{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    width: 1400px;
    margin: 50px auto;
    background: $color-project;
    border-radius: 30px;
    @include border-shadow-bloc();
    @media (max-width: 1400px){
        width: 100%;
    }
    &__title{
        width: 100%;
        height: 30px;
        margin-top: 1rem;
        text-transform: uppercase;
        font-size: 2em;
        font-weight: bold;
        text-align: center;
    }
    &__text--end{
        width: 94%;
        @include content__title--style();
        text-align: right;
        margin-bottom: 20px;
    }
}


.content{
    width: 400px;
    height: auto;
    margin: 30px 20px;
    background: $color-content;
    border-radius: 20px;
    @include border-shadow-content();
    overflow: hidden;
    @media (max-width: 1400px){
        width: 40%;
        min-width: 450px;
    }
    @include mobile-only{
        width: 70%;
    }
        &__link{
            display: block;
            height: 100%;
        }
        &__title{  
            margin: 10px 0;
            @include content__title--style();
        }
        &__name{
            margin: 10px 0;
            @include content__name--style();
        }
        &__pic{
            object-fit: cover;
            width: 100%;
            height: 260px;
        }
        &__text{
            @include content__text--style();
        }
}

/* EXERCICES */
/* BOUCLE */
/* 
Définir des VARIABLES
définir une MAP
Créer une MIXIN et y integrer la boucle
avec @each $key, $value in $map
voir readme.txt
*/

$color-primary: #26408B;
$color-secondary: #a6cad5;
$color-third: #0F084B;
$color-white: #fff;

$btn-mods: (
    link:(
        bg: $color-third,
        border: $color-white,
        txt: $color-white,),
    hover:(
        bg: $color-primary,
        border: $color-white,
        txt: $color-white,),
    active:(
        bg: $color-secondary,
        border: $color-third,
        txt: $color-third,),
);

@mixin link {
    background: $color-third;
    border: 2px solid $color-white;
    color: $color-white;
}

@mixin btn-mod ($btn-mods){
    @each $state, $btn-mod in $btn-mods{
        &:#{$state}{
            background-color: map-get($map: $btn-mod,$key: bg);
            border: 2px solid map-get($map: $btn-mod, $key: border);
            color: map-get($map: $btn-mod, $key: txt);
        }
    }
}

.form{
text-align: center;
&__btn{
    cursor: pointer;
    width: auto;
    height: 200Px;
    padding: 1rem;
    margin-bottom: 50px;
    border: none;
    border-radius: 30px;
    text-transform: uppercase;
    font-family: "roboto 300";
    font-size: 2rem;
    @include link();
    @include btn-mod($btn-mods);
    transform: rotate(0) scale(1);
    transition: all 400ms ease-in-out;
    &:hover{
        transform: rotate(720deg) scale(1.4);
        span{
        transform: scale(1);
    }    
    }

}
}

span{
    display: block;
    transform: scale(0.5);
    transition: scale 400ms ease-in-out;
}


/* Voici le challenge : automatiser la création de modificateurs qui changent la couleur du texte de  .article__headline  pour les valeurs de couleurs suivantes :

#cc8624 (orange).
#cc2475 (rose).
#2469cc (bleu)
#24cc24 (vert).

Mettez les valeurs dans une map en attribuant une clé à chacune, puis utilisez une boucle @each pour générer des sélecteurs ayant la structure suivante :

.article__heading--/*colour name goes here*/ 
/*  color:colour values goes here */ 

$heading--colors:(
    orange: #cc8624,
    rose:#cc2475,
    bleu:#2469cc,
    vert:#24cc24,);

@mixin heading--color ($heading-colors){
    @each $name, $color in $heading--colors{
        &--#{$name}{
            color: $color;
            cursor: pointer;
            background: #fff;
            width: 100px;
            height: auto;
            padding: 1rem;
            margin: 20px auto;
            text-align: center;
            border-radius: 20px;
            border: 1px solid $color-bg;
        }
        
    }   
}

.article{
    background: $color-project;
    height: auto;
    padding: 20px;
    border-radius: 30px;
    box-shadow: 2px 2px 11px 0px #123c64;
    &__heading{
        @include heading--color($heading--colors);
    }
}


/* TRANSITIONS */

/* Bouton qui grandit */

$cd-btn: #011c37;
$cd-txt: #15DEA5;
$ball-size: 100px;
$cd-btn-start: rgba(1, 28, 55, 0);
$cd-btn-end: rgba(1, 28, 55, 1);

.btn {
    width: 40%;
    margin: 20px auto;
    background: $color-white;
    color: $color-bg;
    font-size: 3rem;
    text-align: center;
    cursor: pointer;
    padding: 1.85rem 3rem;
    border-radius: 10rem;
    border: 1px solid #fff; 
    transition: scale 1000ms ease;
    &:hover{
        transform: scale(1.15);
        background: $cd-btn-end;
        color: $cd-txt;
    }
    &:active + .ball {
        transform: scale(1);
        span{
            transform: translate(-70px, 10px);
        }
    }
}

.ball{
    width: $ball-size;
    height: $ball-size;
    background: $cd-txt;
    margin: 3rem auto;
    padding: 2em;
    border: 2px solid #fff;
    border-radius: $ball-size * 0.5;
    transform: scale(0.5);
    transition: transform 3000ms cubic-bezier(0, .75, .08, 1);
    overflow: hidden;
    text-align: center;
    font-size: 2em;
    span{
        display: inline-block;
        transform: translate(0,500px);
        transition: transform 100ms ease-in-out 50ms;
    }
}

/* Input invalid @keyframes animation-iteration-count */

$cd-box: #fff;
$cd-txt--invalid: #fff;
$cd-danger: #b20a37;

.container {
  background-color: $color-bg;
  font-size: 2.5rem;
  margin: 2.5rem;
}

label{
    color: $color-project;
}

$shake-intensity:1%;

@keyframes headshake {
    25%{
        transform: translateX($shake-intensity);
    }
    75%{
        transform: translateX(-$shake-intensity);
    }
}

.form {
  &__group {
      & input {
      border: 2px solid $cd-box;
      border-radius: 100rem;
      color: $cd-txt;
      font-family: 'Montserrat', sans-serif;
      font-size: 2.5rem;
      outline: none;
      padding: .5rem 1.5rem;
      width: 500px;
      /* transition: background-color 300ms; */
        &:focus {
          border: 2px solid $cd-txt;
          }
        &:not(:focus):invalid{
          background-color: $cd-danger;
          border: 2px solid $cd-danger;
          color: $cd-txt--invalid;
          animation: headshake 100ms cubic-bezier(.4,.1,.6,.9) 2;
          /* animation-iteration-count: 2; */
        }
      }
  }
}

/* Bouton qui tourne */

.combine{
    background: $color-bg;
    margin: 2.5rem;
    height: 300px;
    &__btn{
    width: 40%;
    margin: 20px auto;
    background: $color-white;
    color: $color-bg;
    cursor: pointer;
    padding: 1.85rem 3rem;
    border-radius: 10rem;
    border: 1px solid #fff;
    font-size: 3rem;
    text-align: center;
    }
    &__ball{
    width: 100px;
    height: auto;
    background: $cd-txt;
    margin: 3rem auto;
    padding: 2em;
    border: 2px solid #fff;
    border-radius: 20px;
    transform: scale(1) rotate(0deg);
    transition: all 300ms ease-in-out;
    overflow: hidden;
    }
    &__txt{
        padding: auto;
        text-align: center;
        font-size: 2rem; 
        transform: translate(0,-200px);       
    }
}

.combine{
    &__btn:active + .combine__ball{
        transform: scale(1.5) rotate(360deg) skew(10deg,0);
        .combine__txt{
            transform: translate(-20px,0);
            transition: transform 300ms ease-in-out;
        }
    }
}


/* Barre de chargement */
@keyframes progress-bar {
    0% {
        transform: scaleX(0);
    }
    17%{
        transform: scaleX(.18);
    }
    24%{
        transform: scaleX(.4);
    }
    46%{
        transform: scaleX(.81);
    }
    85%,100%{
        opacity: 1;
    }
    100%{
        transform: scaleX(1);
    }
}

.charge{
    width: auto;
    height: 200Px;
    background: $color-content;
    padding: 40px;
    &__btn{
        cursor: pointer;
        width: 150px;
        margin: 20px auto;
        padding: 15px;
        background: $color-bg;
        color: $color-project;
        font-size: 2rem;
        text-align: center;
        border-radius: 20px;
        &:active + .charge__progress > .charge__progress__bar{
            /* transform: scaleX(1); */
            animation: progress-bar 1000ms;
        }
    }
    &__progress{
        width: 1000px;
        height: 20px;
        margin: 10px auto;
        border: 2px solid black;
        background: $color-white;
        &__bar{
            margin: 5px;
            height: 10px;
            background: #15DEA5;
            transform-origin: left;
            transform: scaleX(0);
            opacity: 0;
            /* transition: all 2000ms cubic-bezier(.32, 0, .07, 1); */
        }
    }
}

/* .charge__btn:active + .charge__progress > .charge__progress__bar{
    transform: scaleX(1);
} */


/* Bouton 3D */

$cd-on: #59CD90;
$cd-off: #EE6352;
$persp: 500px;
$btn-width: 25vw;
$btn-height: 7.5vw;

@mixin facet {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.button3d {
  margin:300px auto;
  width: 75%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column-reverse;
  
.btn3d {
    color: white;
    font-size: 3.5rem;
    cursor: pointer;
    position: relative;
    width: $btn-width;
    height: $btn-height;
    perspective: $persp;
    &:active {
        & > .btn__flip {
            transform: rotateX(-90deg);
        }
    }
    .btn__flip {
        @include facet; 
        transform-style: preserve-3d;
        transform-origin: center bottom ($btn-height/2);
        transition: transform 500ms cubic-bezier(.7,.01,.23,.99);
        transform: rotateX(0deg);
        .btn__flip--off {
            transform: rotateX(0deg) translateZ($btn-height/2);
            @include facet;
            background: $cd-off;
        }
        .btn__flip--on {
            transform: rotateX(90deg) translateZ($btn-height/2);
            @include facet;
            background: $cd-on;
        }
    }
}
}


/* Sabre JEDI */

.lightsaber .hilt {
	cursor: pointer;
	width: 15px;
	height: 50px;
	border-bottom: solid 4px grey;
	border-top: solid 5px grey;
	border-radius: 5px;
	z-index: 1;
	background: rgb(226, 226, 226);
	background: linear-gradient(
		to right,
		rgba(226, 226, 226, 1) 0%,
		rgba(219, 219, 219, 1) 50%,
		rgba(209, 209, 209, 1) 51%,
		rgba(254, 254, 254, 1) 100%
	);

  // Bouton de la poignée
	& > .switch {
		background: #b94a37;
		width: 3px;
		height: 10px;
		position: absolute;
		bottom: 25px;
		left: 13px;
		border-radius: 10px;
	}

  //Au clic sur la poignée, le laser prend la taille voulue en hauteur
	&:active + .plasma {
		transform: scale(1, 1);
	}

	&:active > .switch {
		transform: scale(0.7, 1);
	}
}

.lightsaber .plasma {
	transition: transform 300ms;
	border-radius: 12px 12px 0 0;
	position: absolute;
	bottom: 45px;
	left: 2px;
	width: 10px;
	display: block;
	transform: scale(1, 0);
	height: 250px;
	transform-origin: bottom center;
  z-index: -1;
	filter: blur(1px);
}

.vader {
	background: linear-gradient(
		to right,
		rgba(229, 17, 21, 1) 0%,
		rgba(254, 254, 254, 1) 30%,
		rgba(254, 254, 254, 1) 47%,
		rgba(254, 254, 254, 1) 71%,
		rgba(229, 17, 21, 1) 100%
	);
	box-shadow: 0 0 10px #e51115;
}

.lightsaber-example {
	display: flex;
  justify-content: center;
	padding-top: 325px;
}

.lightsaber {
	position: relative;
}

/* Button */

$border-rad: 2rem;
$clr-btn: #15DEA5;

.blocopac{
    height: 200px;
    width: 100%;
    background: $color-project;
    padding: 20px 0;
}

.button {
    display: block;
    position: relative;
    z-index: 1;
    width: auto;
    margin: 40px auto;
    padding: 1rem;
    border-radius: $border-rad;
    background-color: $clr-btn;
    overflow: hidden;
    border: none;
    color: none;
    &:hover {
        &::after{
            opacity: 1;
        }
    }
    &::after{
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: radial-gradient(circle, lighten($clr-btn, 5) 0%, darken($clr-btn, 10) 100%);
        opacity: 0;
        z-index: -1;
        transition: opacity 250ms;
    }
}

/* KEYFRAMES CHAT */

$duration-progress: 1000ms;
$duration-delay: 100ms;
$duration-cat-delay: $duration-progress + $duration-delay*2;

@keyframes barre__charge{
    0% {
        transform: scaleX(0);
        opacity: .1;
    }
    17% {
        transform: scaleX(.18);
    }
    24% {
        transform: scaleX(.4);
        animation-timing-function: cubic-bezier(.9,0,.1,1);
    }
    46% {
        transform: scaleX(.81);
        animation-timing-function: cubic-bezier(.25,0.25,1);
    }
    85%,100% {
        opacity: 1;
    }
    100% {
        transform: scaleX(1);
    }
}

@keyframes cat {
    0%{
        transform: translateX(-9999px);
    }
    100%{
        transform: translateX(0);
    }   
}

.exo{
    height: 40vw;
}

.barre{
    width: 50vw;
    height: 20px;
    margin: 10px auto;
    border: 2px solid black;
    background: $color-white;
    &__charge{
        margin: 5px;
        height: 10px;
        background: #15DEA5;
        transform-origin: left;
        transform: scaleX(0.5);
        animation: barre__charge $duration-progress $duration-delay both;
        /* animation-timing-function: cubic-bezier(.9,0,.1,1); */
        /* animation-fill-mode: both; */
    }
}

.cat {
    width: 50vw;
    height: 30vw;
    position: absolute;
    overflow: hidden;
    background-image: url("https://bit.ly/2XJJLKn");
    background-size: cover;
    background-position: -20%;
    z-index: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    padding: .1rem;
    font-size: 4vw;
    font-weight: 900;
    color: white;
    animation: cat 0ms $duration-cat-delay both;
}


/* LOADER 5 barres */

.container{
    padding: 50px 0 50px 100px;
}

$cd-bars: #15DEA5;
$cd-bars-inv: #0E397F;
$size: 3vh;
$num-bars: 5;
$anim-dur: 1000ms;
$anim-delay: $anim-dur / $num-bars;

@keyframes bars {
    0%{
        transform: scaleY(0.5);
    }
    100%{
        transform: scaleY(1);
    }
}

.load {
    width: $size*10;
    height: $size*7.5;
    display: flex;
    justify-content: space-evenly;
    &__bar {
        background-color: $cd-bars;
        height: 100%;
        width: $size;
        animation: bars $anim-dur backwards infinite ease-in-out alternate;
        /* animation-direction: alternate; */
        @for $i from 1 through $num-bars {
            &--#{$i} {
                animation-delay: $anim-delay * $i;
            }
            &--#{$i}-inv {
                animation-delay: $anim-delay * $i + random(100)*15ms;
                animation-direction: alternate-reverse;
                background-color: $cd-bars-inv;
                &:hover{
                    animation-play-state: paused;
                }
            } 
        }
    }
}

/* Carré qui tourne à l'infini sur hover */
.spin {
    background-color: #15DEA5;
    width: 30vh;
    height: 30vh;
    animation: spin 3s linear infinite paused;
    &:hover{
        animation-play-state: running;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}